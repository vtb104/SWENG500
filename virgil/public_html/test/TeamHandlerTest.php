<?php

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-06-07 at 05:24:19.
 */
include_once '../TeamHandler.php';
include_once '../Team.php';
class TeamHandlerTest extends PHPUnit_Framework_TestCase {

    /**
     * @var TeamHandler
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new TeamHandler;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * Generated from @assert ("1") == true.
     *
     * @covers TeamHandler::addTeam
     */
    public function testAddTeam() {
        $this->assertEquals(
                true
                , $this->object->addTeam("1")
        );
    }

    /**
     * Generated from @assert ("2") == true.
     *
     * @covers TeamHandler::addTeam
     */
    public function testAddTeam2() {
        $this->assertEquals(
                true
                , $this->object->addTeam("2")
        );
    }

    /**
     * Generated from @assert (null) == ErrorException.
     *
     * @covers TeamHandler::addTeam
     */
    public function testAddTeam3() {
        $this->assertEquals(
                ErrorException
                , $this->object->addTeam(null)
        );
    }

    /**
     * Generated from @assert ("user1","1") == true.
     *
     * @covers TeamHandler::addUserToTeam
     */
    public function testAddUserToTeam() {
        $this->assertEquals(
                true
                , $this->object->addUserToTeam("user1", "1")
        );
    }

    /**
     * Generated from @assert ("user2","1") == true.
     *
     * @covers TeamHandler::addUserToTeam
     */
    public function testAddUserToTeam2() {
        $this->assertEquals(
                true
                , $this->object->addUserToTeam("user2", "1")
        );
    }

    /**
     * Generated from @assert ("user3","2") == false.
     *
     * @covers TeamHandler::addUserToTeam
     */
    public function testAddUserToTeam3() {
        $this->assertEquals(
                false
                , $this->object->addUserToTeam("user3", "2")
        );
    }

    /**
     * Generated from @assert (null,null) == ErrorException.
     *
     * @covers TeamHandler::addUserToTeam
     */
    public function testAddUserToTeam4() {
        $this->assertEquals(
                ErrorException
                , $this->object->addUserToTeam(null, null)
        );
    }

    /**
     * Generated from @assert ("321","123","1") == true.
     *
     * @covers TeamHandler::updateTeamLocation
     */
    public function testUpdateTeamLocation() {
        $this->assertEquals(
                true
                , $this->object->updateTeamLocation("321", "123", "1")
        );
    }

    /**
     * Generated from @assert (null,"123","1") == false.
     *
     * @covers TeamHandler::updateTeamLocation
     */
    public function testUpdateTeamLocation2() {
        $this->assertEquals(
                false
                , $this->object->updateTeamLocation(null, "123", "1")
        );
    }

    /**
     * Generated from @assert ("321",null,"1") == false.
     *
     * @covers TeamHandler::updateTeamLocation
     */
    public function testUpdateTeamLocation3() {
        $this->assertEquals(
                false
                , $this->object->updateTeamLocation("321", null, "1")
        );
    }

    /**
     * Generated from @assert ("321","123",null) == false.
     *
     * @covers TeamHandler::updateTeamLocation
     */
    public function testUpdateTeamLocation4() {
        $this->assertEquals(
                false
                , $this->object->updateTeamLocation("321", "123", null)
        );
    }

    /**
     * Generated from @assert ("90","1") == true.
     *
     * @covers TeamHandler::updateTeamBearing
     */
    public function testUpdateTeamBearing() {
        $this->assertEquals(
                true
                , $this->object->updateTeamBearing("90", "1")
        );
    }

    /**
     * Generated from @assert (null,"1") == false.
     *
     * @covers TeamHandler::updateTeamBearing
     */
    public function testUpdateTeamBearing2() {
        $this->assertEquals(
                false
                , $this->object->updateTeamBearing(null, "1")
        );
    }

    /**
     * Generated from @assert ("90",null) == false.
     *
     * @covers TeamHandler::updateTeamBearing
     */
    public function testUpdateTeamBearing3() {
        $this->assertEquals(
                false
                , $this->object->updateTeamBearing("90", null)
        );
    }

}
